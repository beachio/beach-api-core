en:
  errors:
    not_found: "Not Found"
    method_not_allowed: "Method not allowed"
    unknown_action: "Unknown action '%{action}'"
    something_went_wrong: 'Something went wrong'
  api:
    errors:
      could_not_remove: "Could not remove %{model}"
      email_has_been_created: "Email has been created"
      favourite_item_could_not_be_deleted: "This favourite item could not be deleted"
      could_not_revoke_invitation: "Could not revoke an invitation"
    resource_description:
      resources:
        authorization: "Authorization"
        passwords: "Passwords"
        broadcasts: 'Broadcasts'
      errors:
        forbidden_request: "Forbidden request"
        unauthorized: "Unauthorized"
        bad_request: "Bad request"
        user_does_not_belong_to_organisation: "User doesn't belong to current organisation"
      fail: "fail: '%{description}'"
      fails:
        errors_description: "Errors Description"
        error_description: "Error description"
        could_not_authorize_user: "Can not authorize user"
      descriptions:
        params:
          postfield_file: "Postfield file"
          encoded_string: "Encoded Base64 string"
          any_custom_field: "Any custom field"
          term_for_autocomplete: "Term for autocomplete"
          relative_request_path: "Relative request path or full request url"
          post_put_patch_request_params: "POST, PUT, PATCH request params"
          cron_schedule: 'Cron schedule for a job in format "30.minutes", "1.hour", "2.days", etc. Min period is 30 minutes.'
          request_headers: "Request headers"
          array_of_user_ids: "An array of user ids to send email instead of `to` param"
          sender_mail: "Sender email"
          recipient_emails: "Recipient emails joined by comma"
          email_html_body: "Email html body"
          email_plain_text_body: "Email plain text body (If omitted stripped `body` will be used as plain body)"
          template_name: "Template name to parse"
          templete_params: "Template params to use for parsing"
          email_timestamp: "Timestamp for sending out an email"
          reset_password_token: "Reset password token"
          event_type: 'Event type ("organisation_created", "team_created" or "user_created")'
        applications:
          list: "Get list of applications"
          create: "Create an application"
          get: "GET an application"
          update: "Update an application"
          delete: "Delete an application"
        assignments:
          assign: "Assign a role to user in current organisation"
          remove: "Remove user's role"
        atoms:
          create: "Create an atom"
          update: "Update an atom by id or name"
          get: "Get an atom"
          remove: "Remove an atom by id or name"
          list: "List of atoms"
          can_be_atom_id_or_name: "can be either atom id or name"
        capabilities:
          create: "Create capability"
          remove: "Remove capability"
        emails:
          send: "Send an email"
        entities:
          show: "Show an entity"
          create: "Create an entity"
          remove: "Remove an entity"
        favourites:
          create: "Create favourite item"
          list: "List of user favourites items"
          remove: "Remove favourite item"
        invitations:
          create: "Create an invitation"
          list: "Get a list of pending invitations for group"
          revoke: "Revoke an invitation"
          accept: "Accept an invitation"
        jobs:
          create: "Create a new job"
          show: "Show an existing job"
          destroy: "Destroy an existing job"
        memberships:
          create: "Create a membership"
          destroy: "Destroy membership"
        organisations:
          list: "List of user organisations"
          create: "Create an organisation"
          get: "Get organisation"
          update: "Update organisation"
          remove: "Remove organisation"
          get_users: "Get organisation users for organisation owner"
          set_context: "Set organisation context"
        passwords:
          send: "Send forgot password email"
          reset: "Reset user's password"
        permissions:
          list: "List of rights for Atom"
          create_update: "Create/Update permission for Atom"
        projects:
          create: "Create a new project"
          get: "Get project info (scoped by organisation)"
          update: "Update an existing owned project"
          destroy: "Destroy an existing owned project"
        roles:
          list: "Get list of available roles"
        service_categories:
          list: "Service categories list"
          create: "Create service category"
          update: "Update service category"
        services:
          list: "Get list of services"
          update: "Update service"
        sessions:
          authorize: "Authorize user"
        settings:
          create_update: "Create/Update setting by given name for organisation owners"
        teams:
          create: "Create a team"
          get: "Get team"
          update: "Update a team"
          remove: "Remove team"
        users:
          create: "Create user"
          get: "Get current user"
          update: "Update current user"
          confirm: "Confirm user"
        broadcasts:
          create: "Notify user"
        webhooks:
          list: "List of webhooks"
          create: "Create a webhook"
          remove: "Remove a webhook"
  interactors:
    errors:
      email_must_be_present: "Email must be present"
      password_must_be_present: "Password must be present"
      not_valid_email_or_password: "The email or password you have provided is not valid"
      incorrect_token: "The token is incorrect"
      incorrect_application_id_or_secret: "Application ID and/or secret are not correct"
      require_application_id_and_secret: "Require Application ID and secret"
      invalid_email: "Invalid email"
      invalid_token: "Invalid token"
  activerecord:
    errors:
      messages:
        can_not_be_a_parent: "can not be a parent"
        can_not_be_created_more_than_one: "can't be created more than one record"
        can_not_have_duplicate_keys: "can not have duplicate keys"
        is_required: "is required"
        must_include_required_params_preset: "must include bearer, method and uri"
    models:
      doorkeeper/application: &application
        one: "Application"
        other: "Applications"
        downcase: "application"
      application:
        <<: *application
      beach_api_core/assignment: &assignment
        one: "Assignment"
        other: "Assignments"
        downcase: "assignment"
      assignment:
        <<: *assignment
      beach_api_core/atom: &atom
        one: "Atom"
        other: "Atoms"
        downcase: "atom"
      atom:
        <<: *atom
      beach_api_core/capability: &capability
        one: "Capability"
        other: "Capabilities"
        downcase: "capability"
      capability:
        <<: *capability
      beach_api_core/email: &email
        one: "Email"
        other: "Emails"
        downcase: "email"
      email:
        <<: *email
      beach_api_core/favourite: &favourite
        one: "Favourite"
        other: "Favourites"
        downcase: "favourite"
      favourite:
        <<: *favourite
      beach_api_core/invitation: &invitation
        one: "Invitation"
        other: "Invitations"
        downcase: "invitation"
      invitation:
        <<: *invitation
      beach_api_core/job: &job
        one: "Job"
        other: "Jobs"
        downcase: "job"
      job:
        <<: *job
      beach_api_core/membership: &membership
        one: "Membership"
        other: "Memberships"
        downcase: "membership"
      membership:
        <<: *membership
      beach_api_core/organisation: &organisation
        one: "Organisation"
        other: "Organisations"
        downcase: "organisation"
      organisation:
        <<: *organisation
      beach_api_core/permission: &permission
        one: "Permission"
        other: "Permissions"
        downcase: "permission"
      permission:
        <<: *permission
      beach_api_core/profile_custom_field: &profile_custom_field
        one: "Profile Custom Field"
        other: "Profile Custom Fields"
        downcase: "profile custom field"
      profile_custom_field:
        <<: *profile_custom_field
      user_profile_custom_field:
        one: "User Profile Custom Field"
        other: "User Profile Custom Fields"
        downcase: "user profile custom field"
      beach_api_core/project: &project
        one: "Project"
        other: "Projects"
        downcase: "project"
      project:
        <<: *project
      beach_api_core/role: &role
        one: "Role"
        other: "Roles"
        downcase: "role"
      role:
        <<: *role
      beach_api_core/service_category: &service_category
        one: "Service Category"
        other: "Service Categories"
        downcase: "service category"
        capital_other: "Service categories"
      service_category:
        <<: *service_category
      beach_api_core/service: &service
        one: "Service"
        other: "Services"
        downcase: "service"
      service:
        <<: *service
      beach_api_core/setting: &setting
        one: "Setting"
        other: "Settings"
        downcase: "setting"
      setting:
        <<: *setting
      beach_api_core/team: &team
        one: "Team"
        other: "Teams"
        downcase: "team"
      team:
        <<: *team
      beach_api_core/user: &user
        one: "User"
        other: "Users"
        downcase: "user"
      user:
        <<: *user
      beach_api_core/template: &template
        one: "Template"
        other: "Templates"
        downcase: "template"
      template:
        <<: *template
      beach_api_core/entity: &entity
        one: "Entity"
        other: "Entities"
        downcase: "entity"
      entity:
        <<: *entity
      beach_api_core/webhook: &webhook
        one: "Webhook"
        other: "Webhooks"
        downcase: "webhook"
      webhook:
        <<: *webhook
